project(imgui VERSION 1.90.4 DESCRIPTION "imgui subrepo" LANGUAGES CXX)
set(CONFIG_PROJECT_NAME ${PROJECT_NAME}Config)

set(CMAKE_DEFAULT_BUILD_TYPE "Release")

if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  message(STATUS "Setting build type to '${DEFAULT_BUILD_TYPE}' as none was specified.")
  set(CMAKE_BUILD_TYPE "${DEFAULT_BUILD_TYPE}" CACHE STRING "Choose the type of build." FORCE)
  # Set the possible values of build type for cmake-gui
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

include(GNUInstallDirs)

file(GLOB IMGUI_SRCS *.cpp *.h)
file(GLOB IMGUI_HEADERS *.h)

add_library(${PROJECT_NAME} SHARED ${IMGUI_SRCS})
set_target_properties(${PROJECT_NAME} PROPERTIES 
  #IMPORTED_LOCATION ${RUNTIME_OUTPUT_DIRECTORY}
  # INTERFACE_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR}
  VERSION ${PROJECT_VERSION} 
  SOVERSION ${PROJECT_VERSION_MAJOR}
)
target_include_directories(${PROJECT_NAME} PUBLIC
  $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}
  $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
)

install(TARGETS ${PROJECT_NAME} EXPORT ${CONFIG_PROJECT_NAME}
    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
# install(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc
    # DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/pkgconfig)

# install(EXPORT ${CONFIG_PROJECT_NAME} DESTINATION share/imgui/cmake)

export(TARGETS ${PROJECT_NAME} FILE ${CONFIG_PROJECT_NAME}.cmake)